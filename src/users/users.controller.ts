import {BaseController} from "../common/base.controller";import {Request,Response,NextFunction} from "express";import {HTTPError} from "../errors/http-error.class";import {inject, injectable} from "inversify";import {TYPES} from "../types";import {LoggerInterface} from "../logger/logger.interface";import 'reflect-metadata';import {UsersInterface} from "./users.interface";@injectable()export class UsersController extends BaseController implements UsersInterface {    constructor(@inject(TYPES.LoggerInterface) private loggerService:LoggerInterface){        super(loggerService);        this.bindRoutes([            {path:'/registration',method:'post',func:this.registration},            {path:'/login',method:'post',func:this.login}        ])    }    login(request:Request,response:Response,next:NextFunction){        next(new HTTPError(401,' Authorization Failed','Login'));    }    registration(request:Request,response:Response,next:NextFunction){        this.ok(response,'registration');    }}